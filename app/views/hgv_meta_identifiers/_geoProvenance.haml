- @identifier.non_database_attribute[:provenance].each_index do |provenanceIndex| # provenance / events
  - provenance = HGVGeo::Provenance.new( :provenance => @identifier.non_database_attribute[:provenance][provenanceIndex])
  - base = 'hgv_meta_identifier[provenance][' + provenanceIndex.to_s + ']'
  - baseAttributes = base + '[attributes]'
  - baseChildren = base + '[children]'

  .provenance{:id => 'provenance_' + provenanceIndex.to_s }
    %p
      = label_tag baseAttributes + '[type]', I18n.t('meta.label.type'), :class => 'meta provenanceType', :title => @identifier.configuration.xpath(:provenance)
      = select_tag baseAttributes + '[type]', options_for_select(HGVProvenance.eventOptions, provenance.type), :disabled => !@identifier.mutable?, :class => 'observechange provenanceType'
    
      = label_tag baseAttributes + '[subtype]', I18n.t('meta.label.subtype'), :class => 'meta provenanceSubtype', :title => @identifier.configuration.xpath(:provenance)
      = select_tag baseAttributes + '[subtype]', options_for_select(HGVProvenance.subtypeOptions, provenance.subtype), :disabled => !@identifier.mutable?, :class => 'observechange provenanceSubtype'
    
    %p
      = label_tag baseAttributes + '[id]', I18n.t('meta.label.id'), :class => 'meta provenanceId', :title => @identifier.configuration.xpath(:provenance)
      = text_field_tag baseAttributes + '[id]', provenance.id, :disabled => !@identifier.mutable?, :class => 'observechange provenanceId'
    
    %p
      = label_tag baseAttributes + '[date]', I18n.t('meta.label.date'), :class => 'meta provenanceDate', :title => @identifier.configuration.xpath(:provenance)
      = text_field_tag baseAttributes + '[date]', provenance.date, :disabled => !@identifier.mutable?, :class => 'observechange provenanceDate'
      
    .placeContainer
      =render :partial => 'hgv_meta_identifiers/geoPlace', :locals => {:placeList => provenance.placeList, :baseChildren => baseChildren, :provenanceIndex => provenanceIndex}
      .clear    
      
