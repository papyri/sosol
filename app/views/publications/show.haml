#main
  - max_visible_comments = 10
  :javascript 

    function checkForComment() { 
      comment_text = $('submit_comment').value; 

      if ($('community_id') != null)
      {
        var selected_submit = $('community_id').value;
        $('submit_button').disabled = (selected_submit == "")  ||  ( comment_text.replace(/^\s+|\s+$/g, '') == "" )
      }
      else
      {
        $('submit_button').disabled = ( comment_text.replace(/^\s+|\s+$/g, '') == "" )
      } 
    }
    
    function toggle_div(obj) {
      var el = document.getElementById(obj);
      if ( el.style.display != "none" ) {
        el.style.display = 'none';
      }
      else {
        el.style.display = '';
      }
    }
  =# render :partial => 'identifiers/edit_bar'
  .site
    %h2 
      = @publication.title
      - if !@publication.status.nil? && @publication.status != ''
        == (#{@publication.status})
      
    -# render :partial => "common/flash_all"    

    - if %w{new editing}.include?(@publication.status)
      #submit
        - if @show_submit
          %h3 Submit
          %p   
            You have changed the following items:
            %ul  
              - for identifier in @publication.identifiers      
                - if identifier.modified
                  %li
                    = "#{identifier.title} (#{identifier.class::FRIENDLY_NAME  })"
            They will be submitted to the proper boards for review.
            = form_tag({:controller => 'publications',:action => "submit"})  do
              -#= hidden_field_tag 'community_id'
              You will no longer be able to edit any of the items in this the publication once it is submitted. 
              %br
              %br
              = label_tag "Briefly describe the reason for your submission:"
              %br
              %br
              = text_area_tag 'submit_comment', "", :onkeyup => "checkForComment()", :cols => 70, :rows => 4
              %br
              %br
              = submit_tag "Submit to Boards", :onclick => 'this.disabled=true;this.form.submit();', :disabled => true, :class => 'submit', :id => "submit_button"
              
              - if @current_user.community_memberships.count > 0
                - community_hash = Hash.new
                - community_hash[Sosol::Application.config.site_name] = 0
                - @current_user.community_memberships.each do |community|
                
                  - if community.is_submittable? #check to see that we can submit to community
                    - community_hash[community.format_name] = community.id
                  -#= submit_tag "Submit to " + community.friendly_name + " Boards", :disabled => true, :class => 'submit', :onclick => "setCommunityId(\'" + community.id.to_s + "\')"
                = select "community", "id", community_hash, {:include_blank => true } ,{ :onchange => 'checkForComment()' }
                
        - else
          %b
            Publication may not be submitted at this time.
            %br
          - if !@publication.modified?
            No changes have been made.

    -# if owner is a board and the branch needs to be recovered, add a button to recover the branch
    - if @publication.board_copy? && (!@publication.branch_exists?) && @publication.branch_recoverable?
      %p This publication's Git branch is missing but may be recoverable via an automated process:
      %br
      = form_tag({:controller => 'publications', :action => 'recover_branch'}) do
        = submit_tag "Recover branch", :disabled => @publication.advisory_lock_exists?("recover_branch_#{@publication.id}"), :onclick => 'this.disabled=true;this.form.submit();'
      %br
      %p
        If automated Git branch recovery fails, please
        %a{href: 'https://github.com/papyri/sosol/issues', target: '_blank'} open an issue here
        with a link back to this publication.

    -# if owner is a board, and it is approved, add a button to make me the finalizer
    - if @publication.owner_type == "Board" && @publication.status == "approved"
      -# if i am already the finalizer dont show the button
      - finalizer = @publication.find_finalizer_user
      - if (!(finalizer && (finalizer.id == @current_user.id))) || ((!finalizer) && @publication.branch_exists? && (@publication.children.length == 0))
        = form_tag({:controller => 'publications', :action => 'become_finalizer'}) do
          = submit_tag "Make me finalizer", :disabled => @publication.advisory_lock_exists?("become_finalizer_#{@publication.id}"), :onclick => 'this.disabled=true;this.form.submit();'
    %br
    
    - if @current_user.developer
      - if @publication.modified?
        %h1 MODIFIED PUBLICATION
      
      
    - for identifier in @publication.identifiers
      - if identifier.class::is_visible   
        %h3
          == #{identifier.class::FRIENDLY_NAME} - 
          = render :partial => "identifiers/pn_link", :locals => {:identifier => identifier}

      %p
        - if identifier.class == DDBIdentifier
          = image_tag('ddb.gif')
        - if identifier.class == HGVIdentifier || identifier.class == HGVTransIdentifier
          = image_tag('hgv.gif')
        - if identifier.class == APISIdentifier
          = image_tag('apis.png')
        - if identifier.class == DCLPMetaIdentifier ||identifier.class == DCLPTextIdentifier
          = image_tag('dclp.png')
        - if identifier.class == OACIdentifier
          = image_tag('oac-logo-ds.png')
        - if identifier.needs_reviewing?(@current_user.id)
          -#%b !
          = image_tag('review_flag.png')
        = identifier.title
        -# if identifier.modified? && @publication .status == "voting" && @publication.owner_type == "Board" && @publication.owner.controls_identifier?(identifier)
        -# if identifier.needs_reviewing?
          Needs Reviewing

        - if @publication.status != "archived"
          = render :partial => identifier

    - if @all_comments != nil  
      %div{:id => "all_comments_div", :style => "display:none;"}
        %br
        %div{:class => "toggle_all_div"}
          %a{:class => 'toggle_all_link', :href => '#', :onclick => "toggle_div('all_comments_div');toggle_div('xml_only_comments_div');"}
            See XML Comments Only
        %br
        %h3 All Comments 
        = render :partial => "publications/commentall",  :object => @all_comments[0..max_visible_comments-1]
        - if @all_comments.length > max_visible_comments
          %div{:id => "more_comments", :style => "display:none;"}
            = render :partial => "publications/commentall", :object => @all_comments[max_visible_comments..-1]
          %div{:id => "more_comments_link"}
            %a{:class => 'morelink', :href => '#', :onclick => "window.domSlider.slideDown({element: document.getElementById('more_comments')});window.domSlider.slideUp({element: document.getElementById('more_comments_link')});window.domSlider.slideDown({element: document.getElementById('less_comments_link')});return false;"}
              More...
          %div{:id => "less_comments_link", :style => "display:none;"}
            %a{:class => 'lesslink', :href => '#', :onclick => "window.domSlider.slideUp({element: document.getElementById('more_comments')});window.domSlider.slideDown({element: document.getElementById('more_comments_link')});window.domSlider.slideUp({element: document.getElementById('less_comments_link')});return false;"}
              Less...  
     
    - if @xml_only_comments != nil
      %div{:id => "xml_only_comments_div", :style => "display:;"}
        %br
        %div{:class => "toggle_xml_only_div"}
          %a{:class => 'toggle_xml_only_link', :href => '#', :onclick => "toggle_div('all_comments_div');toggle_div('xml_only_comments_div');"}
            See All Comments
        %br
        %h3 XML Comments 
        = render :partial => "publications/commentall",  :object => @xml_only_comments[0..max_visible_comments-1]
        - if @xml_only_comments.length > max_visible_comments
          %div{:id => "more_xml_comments", :style => "display:none;"}
            = render :partial => "publications/commentall", :object => @xml_only_comments[max_visible_comments..-1]
          %div{:id => "more_xml_comments_link"}
            %a{:class => 'morelink', :href => '#', :onclick => "window.domSlider.slideDown({element: document.getElementById('more_xml_comments')});window.domSlider.slideUp({element: document.getElementById('more_xml_comments_link')});window.domSlider.slideDown({element: document.getElementById('less_xml_comments_link')});return false;"}
              More...
          %div{:id => "less_xml_comments_link", :style => "display:none;"}
            %a{:class => 'lesslink', :href => '#', :onclick => "window.domSlider.slideUp({element: document.getElementById('more_xml_comments')});window.domSlider.slideDown({element: document.getElementById('more_xml_comments_link')});window.domSlider.slideUp({element: document.getElementById('less_xml_comments_link')});return false;"}
              Less...  
            
    - if @other_user_publications != nil && @other_user_publications.length > 0
      %br
      %h3 This publication is also being edited by:
      %ul
        - for other_pub in @other_user_publications
          %li
            = other_pub.creator.human_name
            == <#{mail_to(other_pub.creator.email, nil, :subject => "#{Sosol::Application.config.site_name} - Publication #{other_pub.title}")}>
            == (last edited #{time_ago_in_words(other_pub.updated_at)} ago)
      %br


    - if @publication.mutable?
      - for class_type in @creatable_identifiers
        - link_type = class_type.constantize::FRIENDLY_NAME
        - create_type = 'Create new ' + link_type
        - newstyle = 'style="color:white; background-color:#005DAA"'
        - if class_type == 'APISIdentifier'
          - options = ['Create new APIS'] << APISIdentifier.collection_names_hash.sort
          - form_for :apis, :url => {:controller => 'identifiers', :action => 'create', :publication_id => @publication.id, :identifier_type => class_type} do |f|
            = select_tag 'apis_collection', options_for_select(options.flatten.uniq), :onchange => "this.form.submit()"
        - else
          = link_to(create_type, options = {:controller => 'identifiers', :action => 'create', :publication_id => @publication.id, :identifier_type => class_type, :method => :post}, html_options = {:id => "#{link_type}", :onclick => "$('#{link_type}').replace('<b #{newstyle}>Creating New #{link_type}...</b>');"})
     
        %br


    - if @publication.allow_user_withdrawal?(@current_user)
      %br
      -#= button_to "Withdraw from Editorial Review",  :controller => 'publications', :id => @publication.id, :action => "withdraw"
      = button_to("Withdraw from Editorial Review", options = {:controller => 'publications', :id => @publication.id, :action => "withdraw"}, html_options = {:class => "submit"})
      %br
      
    - if @allow_delete
      = link_to "Delete", :controller => 'publications', :id => @publication.id, :action => "confirm_delete"
      %br
    - if %w{approved voting finalizing}.include?(@publication.status) 
      = link_to "Withdraw from Editorial Review", :controller => 'publications', :id => @publication.id, :action => "confirm_withdraw"
      %br
    
    - if @publication.status == "committed"
      = link_to "Archive", :controller => 'publications', :id => @publication.id, :action => "confirm_archive"
      %br
  
    - if @current_user.developer  
      = link_to "developer immediate delete", @publication, :method => :delete 
      %br
    
    - if %w{new editing submitted approved voting committed}.include? @publication.status
      = link_to "Download Copy", :controller => 'publications', :id => @publication.id, :action => "download"
