- nameList = @identifier.non_database_attribute[type]
- type = type.to_s 
.multi{:id => 'multi_' + type}
  %h6
    %label= I18n.t('biblio.label.firstName')
    %label= I18n.t('biblio.label.lastName')
    %label= I18n.t('biblio.label.name')
  %ul.items{:id => 'multiItems_' + type}
    - if nameList.present?
      - nameList.each_index do |index|
      - firstName = nameList[index].firstName
      - lastName  = nameList[index].lastName
      - name      = nameList[index].name
        %li
          = text_field_tag 'biblio_identifier[' + type + '][' + index.to_s + '][firstName]', firstName, :disabled => !@identifier.mutable?, :class => 'observechange firstName'
          = text_field_tag 'biblio_identifier[' + type + '][' + index.to_s + '][lastName]',  lastName,  :disabled => !@identifier.mutable?, :class => 'observechange lastName'
          = text_field_tag 'biblio_identifier[' + type + '][' + index.to_s + '][name]',      name,      :disabled => !@identifier.mutable?, :class => 'observechange name'

          %span.delete{:onclick => 'multiRemove(this.parentNode)', :title => I18n.t('tooltip.multiDelete')} x
          %span.move{:title => I18n.t('tooltip.multiMove')} o
  %p.add{:id => 'multiPlus_' + type}
    %input.observechange{:id => type + '_firstName'}
    %input.observechange{:id => type + '_lastName'}
    %input.observechange{:id => type + '_name'}
    
    %span{:onclick => "multiAddNameList('" + type + "')", :title => I18n.t('tooltip.multiAdd')}=I18n.t('label.multiAdd')

  = javascript_tag "Sortable.create(document.getElementById('multiItems_" + type + "'), {direction: 'horizontal', handle: '.move'});"
